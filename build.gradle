buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.researchgate:gradle-release:2.8.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

description = 'EPAM Report portal. SoapUI client API'


allprojects {
    apply plugin: 'java'
    group = 'com.epam.reportportal'
}

project.ext.releaseMode = project.hasProperty('releaseMode')

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'net.researchgate.release'
    apply plugin: 'com.jfrog.bintray'


    apply from: "${rootProject.projectDir}/quality.gradle"
    apply from: "${rootProject.projectDir}/release.gradle"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8


    repositories {
        jcenter()
        releaseMode ? maven { url "http://dl.bintray.com/epam/reportportal" } : maven { url "https://jitpack.io" }
        maven { url "https://www.soapui.org/repository/maven2" }
    }


    dependencies {
        if (releaseMode) {
            compile 'com.epam.reportportal:client-java:5.0.0-BETA-17'
            compile 'com.epam.reportportal:commons-model:5.0.0'
            compile('com.epam.reportportal:logger-java-log4j:5.0.0-BETA-9') {
                exclude module: 'client-java'
            }
        } else {
            compile 'com.epam.reportportal:client-java:5.0.0-BETA-17'
            compile 'com.epam.reportportal:commons-model:5.0.0'
            compile('com.epam.reportportal:logger-java-log4j:5.0.0-BETA-9') {
                exclude module: 'client-java'
            }
        }
        compileOnly 'log4j:log4j:1.2.17'
        testCompile 'org.hamcrest:hamcrest-all:1.3'
        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-all:2.0.2-beta'
    }


    //noinspection GroovyAssignabilityCheck
    task zip(type: Zip, overwrite: true) {
        def path = "${project.projectDir}/src/main/resources/"
        archiveClassifier.set('full')
        from shadowJar.outputs.files
        from(path, {
            include 'soapui-log4j.xml'
            into('/bin')
        })
        from(path, {
            include 'reportportal-listeners.xml'
            into('/bin/listeners')
        })
    }
    build.dependsOn zip
}
